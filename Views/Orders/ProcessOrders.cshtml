@model List<OrderManagementSystem.Models.Entities.Order>
@{
    ViewData["Title"] = "Process Orders";
}

<style>
    .order-image {
        width: 120px;
        height: 120px;
        object-fit: cover;
        cursor: pointer;
        transition: transform 0.2s;
        border-radius: 8px;
    }

        .order-image:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

    .image-gallery {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        padding: 10px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .order-table {
        min-width: 100%;
    }

    .compact-cell {
        font-size: 0.95rem;
        padding: 0.75rem;
        vertical-align: middle;
    }

    .order-row-info {
        border-bottom: none !important;
    }

    .order-row-images {
        border-top: none !important;
        background-color: #f8f9fa;
    }

    .more-images-badge {
        width: 120px;
        height: 120px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 8px;
        cursor: pointer;
        transition: transform 0.2s;
    }

        .more-images-badge:hover {
            transform: scale(1.05);
        }

    .customer-info {
        font-size: 1rem;
    }

    .product-item {
        margin-bottom: 8px;
        padding: 8px;
        background: white;
        border-radius: 6px;
        border-left: 3px solid #667eea;
    }
</style>

<div class="container-fluid">
    <!-- Filter Stats -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card shadow-sm border-0 bg-info text-white">
                <div class="card-body">
                    <h6>Ready for Delivery</h6>
                    <h2 class="mb-0">@Model.Count</h2>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by order number, customer name, phone, or product..." />
                        </div>
                        <div class="col-md-4">
                            <button onclick="window.print()" class="btn btn-outline-secondary w-100">
                                <i class="bi bi-printer"></i> Print List
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="card shadow-sm">
        <div class="card-header bg-white">
            <h5 class="mb-0">
                <i class="bi bi-truck"></i> Orders Ready for Delivery
            </h5>
        </div>
        <!-- Orders List -->
        <div id="ordersContainer">
            @if (Model.Any())
            {
                @foreach (var order in Model)
                {
                    <div class="card shadow-sm mb-4 order-card" id="order-@order.Id" style="border-left: 5px solid #667eea;">
                        <div class="card-body">
                            <div class="row">
                                <!-- Order Details -->
                                <div class="col-md-2">
                                    <div class="order-number-badge">
                                        @order.OrderNumber
                                    </div>
                                    <small class="text-muted d-block">
                                        <i class="bi bi-calendar"></i> @order.CreatedAt.ToLocalTimeString("MMM dd")
                                    </small>
                                    <small class="text-muted d-block">
                                        <i class="bi bi-clock"></i> @order.CreatedAt.ToLocalTimeString("hh:mm tt")
                                    </small>
                                    <div class="mt-2">
                                        <strong class="text-success fs-5">৳@order.TotalAmount.ToString("N0")</strong>
                                    </div>
                                </div>

                                <!-- Customer Info -->
                                <div class="col-md-2">
                                    <h6 class="mb-2"><i class="bi bi-person-fill text-primary"></i> Customer</h6>
                                    <strong>@order.CustomerName</strong>
                                    <br>
                                    <small class="text-muted">
                                        <i class="bi bi-telephone-fill text-success"></i> @order.CustomerPhone
                                    </small>
                                </div>

                                <!-- Products -->
                                <div class="col-md-4">
                                    <h6 class="mb-2"><i class="bi bi-box-seam text-primary"></i> Products</h6>
                                    @if (order.Items != null && order.Items.Any())
                                    {
                                        @foreach (var item in order.Items)
                                        {
                                            <div class="product-item">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong>@item.ProductName</strong>
                                                        @if (!string.IsNullOrEmpty(item.ProductColor))
                                                        {
                                                            <br>
                                        
                                                            <small class="text-muted"><i class="bi bi-palette"></i> @item.ProductColor</small>
                                                        }
                                                    </div>
                                                    <div class="text-end">
                                                        <span class="badge bg-primary">@item.Quantity</span>
                                                        <br>
                                                        <small class="text-success fw-bold">৳@((item.Price * item.Quantity).ToString("N0"))</small>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="product-item">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <strong>@order.ProductName</strong>
                                                    @if (!string.IsNullOrEmpty(order.ProductColor))
                                                    {
                                                        <br>
                                        
                                                        <small class="text-muted"><i class="bi bi-palette"></i> @order.ProductColor</small>
                                                    }
                                                </div>
                                                <div class="text-end">
                                                    <span class="badge bg-primary">@order.ProductQuantity</span>
                                                    <br>
                                                    <small class="text-success fw-bold">৳@((order.ProductPrice * order.ProductQuantity).ToString("N0"))</small>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    @if (!string.IsNullOrEmpty(order.OrderNotes))
                                    {
                                        <div class="mt-2 p-2 bg-warning bg-opacity-10 border-start border-warning border-3 rounded">
                                            <small><strong><i class="bi bi-sticky"></i> Note:</strong> @order.OrderNotes</small>
                                        </div>
                                    }
                                </div>

                                <!-- Address -->
                                <div class="col-md-3">
                                    <h6 class="mb-2"><i class="bi bi-geo-alt-fill text-danger"></i> Delivery Address</h6>
                                    <div class="p-2 bg-light rounded">
                                        <small>@order.CustomerAddress</small>
                                    </div>
                                </div>

                                <!-- Action -->
                                <div class="col-md-1 text-center">
                                    <button type="button"
                                            class="btn btn-success btn-lg w-100"
                                            onclick="markForDelivery('@order.Id')"
                                            title="Mark as Out for Delivery">
                                        <i class="bi bi-check-circle-fill"></i>
                                        <br>
                                        <small>Process</small>
                                    </button>
                                </div>
                            </div>

                            <!-- Images Section -->
                            @if ((order.Screenshots != null && order.Screenshots.Any()) || !string.IsNullOrEmpty(order.ScreenshotUrl))
                            {
                                <hr class="my-3">
                                <div class="row">
                                    <div class="col-12">
                                        <h6 class="mb-2"><i class="bi bi-images text-primary"></i> Order Images</h6>
                                        @if (order.Screenshots != null && order.Screenshots.Any())
                                        {
                                            <div class="image-gallery">
                                                @foreach (var screenshot in order.Screenshots.Take(6))
                                                {
                                                    <img src="@screenshot"
                                                         alt="Order Screenshot"
                                                         class="img-thumbnail order-image"
                                                         onclick="showImageModal('@screenshot', '@order.OrderNumber')" />
                                                }
                                                @if (order.Screenshots.Count > 6)
                                                {
                                                    <div class="more-images-badge" onclick="showAllImages('@order.Id', '@order.OrderNumber')">
                                                        <div class="text-center text-white">
                                                            <h3 class="mb-0">+@(order.Screenshots.Count - 6)</h3>
                                                            <small>More</small>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else if (!string.IsNullOrEmpty(order.ScreenshotUrl))
                                        {
                                            <div class="image-gallery">
                                                <img src="@order.ScreenshotUrl"
                                                     alt="Order Screenshot"
                                                     class="img-thumbnail order-image"
                                                     onclick="showImageModal('@order.ScreenshotUrl', '@order.OrderNumber')" />
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-inbox" style="font-size: 4rem; color: #ccc;"></i>
                    <p class="text-muted mt-3">No orders ready for delivery</p>
                    <a asp-action="Index" class="btn btn-primary">
                        <i class="bi bi-list"></i> View All Orders
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalTitle">Order Screenshot</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center bg-dark">
                <img id="modalImage" src="" class="img-fluid" style="max-height: 80vh;" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <a id="downloadImageBtn" href="" download class="btn btn-primary">
                    <i class="bi bi-download"></i> Download
                </a>
            </div>
        </div>
    </div>
</div>

<!-- All Images Modal -->
<div class="modal fade" id="allImagesModal" tabindex="-1">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="allImagesModalTitle">All Order Screenshots</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body bg-dark">
                <div id="allImagesContainer" class="row g-4"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Store all images data for modal
        const orderImagesData = {};

        @foreach (var order in Model)
        {
                if (order.Screenshots != null && order.Screenshots.Any())
                {
                        <text>
                        orderImagesData['@order.Id'] = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(order.Screenshots));
                        </text>
                }
        }

        // Search functionality for card layout
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchValue = this.value.toLowerCase();
            const cards = document.querySelectorAll('.order-card');

            cards.forEach(card => {
                const text = card.textContent.toLowerCase();
                card.style.display = text.includes(searchValue) ? '' : 'none';
            });
        });

        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchValue = this.value.toLowerCase();
            const rows = document.querySelectorAll('#ordersTable tbody tr');

            // Process in pairs (info row + image row)
            for (let i = 0; i < rows.length; i += 2) {
                const infoRow = rows[i];
                const imageRow = rows[i + 1];
                const text = infoRow.textContent.toLowerCase();
                const display = text.includes(searchValue) ? '' : 'none';

                if (infoRow) infoRow.style.display = display;
                if (imageRow) imageRow.style.display = display;
            }
        });

        // Show single image in modal
        function showImageModal(imageUrl, orderNumber) {
            document.getElementById('modalImage').src = imageUrl;
            document.getElementById('imageModalTitle').textContent = 'Order ' + orderNumber + ' - Screenshot';
            document.getElementById('downloadImageBtn').href = imageUrl;
            new bootstrap.Modal(document.getElementById('imageModal')).show();
        }

        // Show all images in modal
        function showAllImages(orderId, orderNumber) {
            const images = orderImagesData[orderId] || [];

            let html = '';
            images.forEach((imageUrl, index) => {
                html += `
                    <div class="col-md-3">
                        <div class="card bg-secondary">
                            <img src="${imageUrl}" class="card-img-top" style="height: 400px; object-fit: contain; cursor: pointer;" onclick="showImageModal('${imageUrl}', '${orderNumber}')">
                            <div class="card-body text-center text-white">
                                <small>Image ${index + 1} of ${images.length}</small>
                            </div>
                        </div>
                    </div>
                `;
            });

            document.getElementById('allImagesContainer').innerHTML = html;
            document.getElementById('allImagesModalTitle').textContent = 'Order ' + orderNumber + ' - All Screenshots (' + images.length + ')';
            new bootstrap.Modal(document.getElementById('allImagesModal')).show();
        }

        // Mark order for delivery
        function markForDelivery(orderId) {
            if (confirm('✓ Mark this order as Out for Delivery?\n\nThis will move the order to the next stage.')) {
                $.ajax({
                    url: '@Url.Action("MarkOutForDelivery", "Orders")',
                    type: 'POST',
                    data: { id: orderId },
                    success: function(response) {
                        if (response.success) {
                            // Find both rows (info + images)
                            const infoRow = document.getElementById('order-' + orderId);
                            const imageRow = infoRow.nextElementSibling;

                            // Animate removal
                            [infoRow, imageRow].forEach(row => {
                                row.style.transition = 'all 0.5s';
                                row.style.backgroundColor = '#d4edda';
                            });

                            setTimeout(function() {
                                [infoRow, imageRow].forEach(row => {
                                    row.style.opacity = '0';
                                });

                                setTimeout(function() {
                                    infoRow.remove();
                                    imageRow.remove();

                                    // Check if table is empty
                                    if (document.querySelectorAll('#ordersTable tbody tr').length === 0) {
                                        location.reload();
                                    }
                                }, 500);
                            }, 500);

                            showToast('Success', response.message, 'success');
                        } else {
                            showToast('Error', response.message, 'danger');
                        }
                    },
                    error: function() {
                        showToast('Error', 'An error occurred. Please try again.', 'danger');
                    }
                });
            }
        }

        // Toast notification
        function showToast(title, message, type) {
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999;">
                    <div class="d-flex">
                        <div class="toast-body">
                            <strong>${title}:</strong> ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;

            const toastElement = $(toastHtml).appendTo('body');
            const toast = new bootstrap.Toast(toastElement[0], { delay: 3000 });
            toast.show();

            toastElement.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }

    </script>
}